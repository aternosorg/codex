<?php

namespace Aternos\Codex\Test\Tests\Analyser;

use Aternos\Codex\Analysis\Analysis;
use Aternos\Codex\Log\Entry;
use Aternos\Codex\Log\File\PathLogFile;
use Aternos\Codex\Log\Line;
use Aternos\Codex\Test\Src\Analysis\TestPatternInformation;
use Aternos\Codex\Test\Src\Analysis\TestPatternProblem;
use Aternos\Codex\Test\Src\Log\TestPatternLog;
use PHPUnit\Framework\TestCase;

class PatternAnalyserTest extends TestCase
{
    /**
     * @return Analysis
     */
    protected function getExpectedAnalysis(): Analysis
    {
        $analysis = (new Analysis())
            ->addInsight((new TestPatternProblem())
                ->setCause("ABC")
                ->increaseCounter()
                ->setEntry((new Entry())->setTime(2)->setLevel("ERROR")
                    ->addLine(new Line(2, "[01.01.1970 00:00:02] [Log/ERROR] I have a problem with ABC"))
                )
            )
            ->addInsight((new TestPatternProblem())
                ->setCause("XYZ")
                ->setEntry((new Entry())->setTime(4)->setLevel("ERROR")
                    ->addLine(new Line(4, "[01.01.1970 00:00:04] [Log/ERROR] I have a problem with XYZ"))
                )
            )
            ->addInsight((new TestPatternProblem())
                ->setCause("DEF")
                ->setEntry((new Entry())->setTime(6)->setLevel("ERROR")
                    ->addLine(new Line(6, "[01.01.1970 00:00:06] [Log/ERROR] I have a problem with DEF"))
                    ->addLine(new Line(7, "I have a problem with GHI"))
                )
            )
            ->addInsight((new TestPatternProblem())
                ->setCause("GHI")
                ->setEntry((new Entry())->setTime(6)->setLevel("ERROR")
                    ->addLine(new Line(6, "[01.01.1970 00:00:06] [Log/ERROR] I have a problem with DEF"))
                    ->addLine(new Line(7, "I have a problem with GHI"))
                )
            )
            ->addInsight((new TestPatternInformation())
                ->setValue("v1.2.3")
                ->setEntry((new Entry())->setTime(7)->setLevel("INFO")
                    ->addLine(new Line(8, "[01.01.1970 00:00:07] [Log/INFO] This log was generated by software v1.2.3"))
                )
            );

        return $analysis;
    }

    public function testAnalyse(): void
    {
        $logFile = new PathLogFile(__DIR__ . '/../../data/problem.log');
        $log = (new TestPatternLog())->setLogFile($logFile);
        $log->parse();

        $analysis = $log->analyse();
        $this->assertEquals($this->getExpectedAnalysis()->getInsights(), $analysis->getInsights());
    }
}
